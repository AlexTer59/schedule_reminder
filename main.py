'''
Global task (ru)
1) –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–ª–∏—Å—å –ø—Ä–∏ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ; +
2) –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ 2 —Ñ–∞–π–ª–∞—Ö: –≤ –ø–µ—Ä–≤–æ–º —Ñ–∞–π–ª–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–æ—Ç–∞, –≤–æ –≤—Ç–æ—Ä–æ–º —Ñ–∞–π–ª, –≥–¥–µ
—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞; +
3) –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã /start, /help, /description; +
4) –î–æ–ª–∂–Ω–æ –ø—Ä–∏—Å—É—Ç–≤–æ–≤–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥; +
5) –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –º–µ–Ω—é, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ
—Å–ø–∏—Å–∫–∞. –û—Ç—Ç—É–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é; +
6) –ü–æ–¥ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–∏ —ç—Ç–æ–º —Ç–∞–∫–∂–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞; +
7) –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è callback –∑–∞–ø—Ä–æ—Å, –µ–º—É –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —Å–µ—Ä–≤–µ—Ä–∞; +
8) inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 4 –∫–Ω–æ–ø–æ–∫: 1. –°–ª–µ–¥—É—é—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, 2. –õ–∞–π–∫, 3. –î–∏–∑–ª–∞–π–∫,
4. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é; +
9) –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –Ω–∞ –ª–∞–π–∫/–¥–∏–∑–ª–∞–π–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π label; +
10) –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏;
11) –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∏–∫–µ—Ä—ã, —ç–º–æ–¥–∑–∏ –∏ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.
'''

from aiogram import Bot, Dispatcher, types, F
from aiogram.methods import DeleteWebhook
from aiogram.types import ReplyKeyboardRemove
from aiogram.filters.command import Command
from keyboards import main_menu_keyboard, links_inline_keyboard, vote_inline_keyboard
import asyncio
import random
import os
from dotenv import load_dotenv

# load .env variables
load_dotenv()

HELP = '''
<b>/start</b> - <em>–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º;</em>
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥;</em>
<b>/description</b> - <em>–æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞;</em>
<b>/links</b> - <em>–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.</em>
<b>–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è</b> - <em>–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.</em>
'''

IMAGE_LINKS = [
    'https://myskillsconnect.com/uploads/posts/2023-06/1687341061_myskillsconnect-com-p-foto-bmv-m5-f90-kompetishn-na-oboi-13.jpg',
    'https://www.carpixel.net/w/edcd160538afd7041e352e24c748f589/mercedes-amg-e-63-s-car-wallpaper-65537.jpg',
    'https://kuznitsaspb.ru/wp-content/uploads/a/0/c/a0c8380c046f0f7b8ab4120e675e2956.jpeg',
    'https://sportishka.com/uploads/posts/2022-08/1660842408_4-sportishka-com-p-lada-priora-sedan-novaya-krasivo-foto-7.jpg',
    'http://audi.carwallpapers.ru/audi/rs7-sportback/2019/Audi-RS7-Sportback-2019-2560x1440-037.jpg'
]

IMAGE_DISCRIPTIONS = [
    'BMW M5 F90',
    'Mercedes-AMG E63S',
    'Alfa Romeo Giulia',
    'Lada Priora',
    'Audi RS7'
]

IMAGE_DICT = dict(zip(IMAGE_LINKS, IMAGE_DISCRIPTIONS))

HELLO_STICKERS = [
    'CAACAgIAAxkBAAELyDtmAAEw3aTt3gABkQHeaaKrAYV7nlj1AAIWAAOhtzMI5tw7vxW0t8U0BA',
    'CAACAgIAAxkBAAELyD1mAAExBgIlgqPsdOg_QhkCFYiwDe8AAiMAA8A2TxN7744rUwpfxjQE',
    'CAACAgIAAxkBAAELyD9mAAExeb3QaGDPf6m8y5Drk4P9j7MAAgUAA8A2TxP5al-agmtNdTQE',
    'CAACAgIAAxkBAAELyEFmAAExl_elj5PRTqlqFW1-VMZ_vzsAAgEBAAJWnb0KIr6fDrjC5jQ0BA',
    'CAACAgIAAxkBAAELyENmAAExuOfqECxY95ngbs67xRu1Y2cAAh4JAAIYQu4I-VjZ7h0hnCE0BA'
]

# Bot object
bot = Bot(token=os.getenv('TOKEN'))
# Dispatcher
dp = Dispatcher()

random_image = random.choice(list(IMAGE_DICT.keys()))

is_like = False
is_dislike = False


async def on_startup():
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')


async def random_img(message: types.Message):
    global random_image
    random_image = random.choice(list(filter(lambda x: x != random_image, list(IMAGE_DICT.keys()))))
    await bot.send_photo(chat_id=message.chat.id,
                         photo=random_image,
                         caption=IMAGE_DICT.get(random_image),
                         reply_markup=vote_inline_keyboard)


# Handler /start command
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,
                           text="<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!</b> üññ",
                           parse_mode="HTML",
                           reply_markup=main_menu_keyboard)
    await bot.send_sticker(chat_id=message.chat.id,
                           sticker=random.choice(HELLO_STICKERS))


# Handler /description command
@dp.message(Command('description'))
async def cmd_description(message: types.Message):
    await message.delete()
    await bot.send_message(chat_id=message.chat.id, text='–≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏')


# Handler /help command
@dp.message(Command('help'))
async def cmd_help(message: types.Message):
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,
                           text=HELP,
                           parse_mode='HTML')


# Handler /links command
@dp.message(Command('links'))
async def get_links(message: types.Message):
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,
                           text='–í–æ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü.—Å–µ—Ç–∏ –º–æ–µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞',
                           reply_markup=links_inline_keyboard)


# Handler –†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è command
@dp.message(F.text == '–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è')
async def get_random_image(message: types.Message):
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,
                           text='–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
                           reply_markup=ReplyKeyboardRemove())
    await random_img(message)


@dp.callback_query()
async def vote_callback(callback: types.CallbackQuery):
    global random_image, is_like, is_dislike
    if callback.data == 'like':
        if not is_like or is_dislike:
            await callback.answer(text='–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')
            is_like = True
            is_dislike = False
        else:
            await callback.answer(text='–í—ã —É–∂–µ –ª–∞–π–∫–∞–ª–∏!')
    elif callback.data == 'dislike':
        if is_like or not is_dislike:
            await callback.answer(text='–í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')
            is_like = False
            is_dislike = True
        else:
            await callback.answer(text='–í—ã —É–∂–µ –¥–∏–∑–ª–∞–π–∫–∞–ª–∏!')
    elif callback.data == 'next':
        random_image = random.choice(list(filter(lambda x: x != random_image, list(IMAGE_DICT.keys()))))
        await callback.message.edit_media(types.InputMediaPhoto(media=random_image,
                                                                caption=IMAGE_DICT.get(random_image)),
                                          reply_markup=vote_inline_keyboard)
        await callback.answer()
    else:
        await callback.message.answer(text='–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:',
                                      reply_markup=main_menu_keyboard)
        await callback.answer()


# Handler /get_location command
@dp.message(Command('get_location'))
async def get_loc_cmd(message: types.Message):
    await message.delete()
    await bot.send_location(chat_id=message.chat.id,
                            latitude=random.randint(-50, 50),
                            longitude=random.randint(-100, 100))


async def main():
    await bot(DeleteWebhook(drop_pending_updates=True))  # There is not skip_updates() in the aiogram 3.X
    dp.startup.register(on_startup)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
